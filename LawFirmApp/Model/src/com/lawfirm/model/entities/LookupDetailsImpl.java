package com.lawfirm.model.entities;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 20 18:35:29 AST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LookupDetailsImpl extends EntityImpl {
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        setLookDeailsId(new BigDecimal(new java.util.Date().getTime()).negate());
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        LookDeailsId,
        LookupType,
        LookupCode,
        Description,
        CreatedBy,
        AmendBy,
        CreationDate,
        AmendDate,
        VersionNo,
        LookupTypes;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int LOOKDEAILSID = AttributesEnum.LookDeailsId.index();
    public static final int LOOKUPTYPE = AttributesEnum.LookupType.index();
    public static final int LOOKUPCODE = AttributesEnum.LookupCode.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int AMENDBY = AttributesEnum.AmendBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int AMENDDATE = AttributesEnum.AmendDate.index();
    public static final int VERSIONNO = AttributesEnum.VersionNo.index();
    public static final int LOOKUPTYPES = AttributesEnum.LookupTypes.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LookupDetailsImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.lawfirm.model.entities.LookupDetails");
    }

    /**
     * Gets the attribute value for LookDeailsId, using the alias name LookDeailsId.
     * @return the value of LookDeailsId
     */
    public BigDecimal getLookDeailsId() {
        return (BigDecimal) getAttributeInternal(LOOKDEAILSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LookDeailsId.
     * @param value value to set the LookDeailsId
     */
    public void setLookDeailsId(BigDecimal value) {
        setAttributeInternal(LOOKDEAILSID, value);
    }

    /**
     * Gets the attribute value for LookupType, using the alias name LookupType.
     * @return the value of LookupType
     */
    public BigDecimal getLookupType() {
        return (BigDecimal) getAttributeInternal(LOOKUPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LookupType.
     * @param value value to set the LookupType
     */
    public void setLookupType(BigDecimal value) {
        setAttributeInternal(LOOKUPTYPE, value);
    }

    /**
     * Gets the attribute value for LookupCode, using the alias name LookupCode.
     * @return the value of LookupCode
     */
    public String getLookupCode() {
        return (String) getAttributeInternal(LOOKUPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LookupCode.
     * @param value value to set the LookupCode
     */
    public void setLookupCode(String value) {
        setAttributeInternal(LOOKUPCODE, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the value of Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for AmendBy, using the alias name AmendBy.
     * @return the value of AmendBy
     */
    public String getAmendBy() {
        return (String) getAttributeInternal(AMENDBY);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for AmendDate, using the alias name AmendDate.
     * @return the value of AmendDate
     */
    public Date getAmendDate() {
        return (Date) getAttributeInternal(AMENDDATE);
    }

    /**
     * Gets the attribute value for VersionNo, using the alias name VersionNo.
     * @return the value of VersionNo
     */
    public BigDecimal getVersionNo() {
        return (BigDecimal) getAttributeInternal(VERSIONNO);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getLookupTypes() {
        return (EntityImpl) getAttributeInternal(LOOKUPTYPES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setLookupTypes(EntityImpl value) {
        setAttributeInternal(LOOKUPTYPES, value);
    }

    /**
     * @param lookDeailsId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal lookDeailsId) {
        return new Key(new Object[] { lookDeailsId });
    }


}

